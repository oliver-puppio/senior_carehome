<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boat.pension.mapper.UserseniorMapper">
  <resultMap id="BaseResultMap" type="com.boat.pension.model.Usersenior">
    <id column="userID" jdbcType="INTEGER" property="userid" />
    <id column="seniorID" jdbcType="INTEGER" property="seniorid" />
    <result column="bindTime" jdbcType="TIMESTAMP" property="bindtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userID, seniorID, bindTime
  </sql>
  <select id="selectByExample" parameterType="com.boat.pension.model.UserseniorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from usersenior
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from usersenior
    where userID = #{userid,jdbcType=INTEGER}
      and seniorID = #{seniorid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from usersenior
    where userID = #{userid,jdbcType=INTEGER}
      and seniorID = #{seniorid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.boat.pension.model.UserseniorExample">
    delete from usersenior
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.boat.pension.model.Usersenior">
    insert into usersenior (userID, seniorID, bindTime
      )
    values (#{userid,jdbcType=INTEGER}, #{seniorid,jdbcType=INTEGER}, #{bindtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.boat.pension.model.Usersenior">
    insert into usersenior
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userID,
      </if>
      <if test="seniorid != null">
        seniorID,
      </if>
      <if test="bindtime != null">
        bindTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="seniorid != null">
        #{seniorid,jdbcType=INTEGER},
      </if>
      <if test="bindtime != null">
        #{bindtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.boat.pension.model.UserseniorExample" resultType="java.lang.Long">
    select count(*) from usersenior
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update usersenior
    <set>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.seniorid != null">
        seniorID = #{record.seniorid,jdbcType=INTEGER},
      </if>
      <if test="record.bindtime != null">
        bindTime = #{record.bindtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update usersenior
    set userID = #{record.userid,jdbcType=INTEGER},
      seniorID = #{record.seniorid,jdbcType=INTEGER},
      bindTime = #{record.bindtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.boat.pension.model.Usersenior">
    update usersenior
    <set>
      <if test="bindtime != null">
        bindTime = #{bindtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where userID = #{userid,jdbcType=INTEGER}
      and seniorID = #{seniorid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boat.pension.model.Usersenior">
    update usersenior
    set bindTime = #{bindtime,jdbcType=TIMESTAMP}
    where userID = #{userid,jdbcType=INTEGER}
      and seniorID = #{seniorid,jdbcType=INTEGER}
  </update>
</mapper>