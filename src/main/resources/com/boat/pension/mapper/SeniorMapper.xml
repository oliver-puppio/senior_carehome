<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boat.pension.mapper.SeniorMapper">
  <resultMap id="BaseResultMap" type="com.boat.pension.model.Senior">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="instID" jdbcType="INTEGER" property="instid" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="IDNum" jdbcType="CHAR" property="idnum" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="heart" jdbcType="INTEGER" property="heart" />
    <result column="breath" jdbcType="INTEGER" property="breath" />
    <result column="registerTime" jdbcType="TIMESTAMP" property="registertime" />
    <result column="cont1" jdbcType="VARCHAR" property="cont1" />
    <result column="cTel1" jdbcType="VARCHAR" property="ctel1" />
    <result column="cont2" jdbcType="VARCHAR" property="cont2" />
    <result column="cTel2" jdbcType="VARCHAR" property="ctel2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, instID, pic, name, gender, IDNum, tel, heart, breath, registerTime, cont1, cTel1, 
    cont2, cTel2
  </sql>
  <select id="selectByExample" parameterType="com.boat.pension.model.SeniorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from senior
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from senior
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from senior
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.boat.pension.model.SeniorExample">
    delete from senior
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.boat.pension.model.Senior">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into senior (instID, pic, name, 
      gender, IDNum, tel, heart, 
      breath, registerTime, cont1, 
      cTel1, cont2, cTel2
      )
    values (#{instid,jdbcType=INTEGER}, #{pic,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=CHAR}, #{idnum,jdbcType=CHAR}, #{tel,jdbcType=VARCHAR}, #{heart,jdbcType=INTEGER}, 
      #{breath,jdbcType=INTEGER}, #{registertime,jdbcType=TIMESTAMP}, #{cont1,jdbcType=VARCHAR}, 
      #{ctel1,jdbcType=VARCHAR}, #{cont2,jdbcType=VARCHAR}, #{ctel2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.boat.pension.model.Senior">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into senior
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="instid != null">
        instID,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="idnum != null">
        IDNum,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="heart != null">
        heart,
      </if>
      <if test="breath != null">
        breath,
      </if>
      <if test="registertime != null">
        registerTime,
      </if>
      <if test="cont1 != null">
        cont1,
      </if>
      <if test="ctel1 != null">
        cTel1,
      </if>
      <if test="cont2 != null">
        cont2,
      </if>
      <if test="ctel2 != null">
        cTel2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="instid != null">
        #{instid,jdbcType=INTEGER},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="idnum != null">
        #{idnum,jdbcType=CHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="heart != null">
        #{heart,jdbcType=INTEGER},
      </if>
      <if test="breath != null">
        #{breath,jdbcType=INTEGER},
      </if>
      <if test="registertime != null">
        #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="cont1 != null">
        #{cont1,jdbcType=VARCHAR},
      </if>
      <if test="ctel1 != null">
        #{ctel1,jdbcType=VARCHAR},
      </if>
      <if test="cont2 != null">
        #{cont2,jdbcType=VARCHAR},
      </if>
      <if test="ctel2 != null">
        #{ctel2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.boat.pension.model.SeniorExample" resultType="java.lang.Long">
    select count(*) from senior
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update senior
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.instid != null">
        instID = #{record.instid,jdbcType=INTEGER},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.idnum != null">
        IDNum = #{record.idnum,jdbcType=CHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.heart != null">
        heart = #{record.heart,jdbcType=INTEGER},
      </if>
      <if test="record.breath != null">
        breath = #{record.breath,jdbcType=INTEGER},
      </if>
      <if test="record.registertime != null">
        registerTime = #{record.registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cont1 != null">
        cont1 = #{record.cont1,jdbcType=VARCHAR},
      </if>
      <if test="record.ctel1 != null">
        cTel1 = #{record.ctel1,jdbcType=VARCHAR},
      </if>
      <if test="record.cont2 != null">
        cont2 = #{record.cont2,jdbcType=VARCHAR},
      </if>
      <if test="record.ctel2 != null">
        cTel2 = #{record.ctel2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update senior
    set id = #{record.id,jdbcType=INTEGER},
      instID = #{record.instid,jdbcType=INTEGER},
      pic = #{record.pic,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      IDNum = #{record.idnum,jdbcType=CHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      heart = #{record.heart,jdbcType=INTEGER},
      breath = #{record.breath,jdbcType=INTEGER},
      registerTime = #{record.registertime,jdbcType=TIMESTAMP},
      cont1 = #{record.cont1,jdbcType=VARCHAR},
      cTel1 = #{record.ctel1,jdbcType=VARCHAR},
      cont2 = #{record.cont2,jdbcType=VARCHAR},
      cTel2 = #{record.ctel2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.boat.pension.model.Senior">
    update senior
    <set>
      <if test="instid != null">
        instID = #{instid,jdbcType=INTEGER},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="idnum != null">
        IDNum = #{idnum,jdbcType=CHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="heart != null">
        heart = #{heart,jdbcType=INTEGER},
      </if>
      <if test="breath != null">
        breath = #{breath,jdbcType=INTEGER},
      </if>
      <if test="registertime != null">
        registerTime = #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="cont1 != null">
        cont1 = #{cont1,jdbcType=VARCHAR},
      </if>
      <if test="ctel1 != null">
        cTel1 = #{ctel1,jdbcType=VARCHAR},
      </if>
      <if test="cont2 != null">
        cont2 = #{cont2,jdbcType=VARCHAR},
      </if>
      <if test="ctel2 != null">
        cTel2 = #{ctel2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boat.pension.model.Senior">
    update senior
    set instID = #{instid,jdbcType=INTEGER},
      pic = #{pic,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      IDNum = #{idnum,jdbcType=CHAR},
      tel = #{tel,jdbcType=VARCHAR},
      heart = #{heart,jdbcType=INTEGER},
      breath = #{breath,jdbcType=INTEGER},
      registerTime = #{registertime,jdbcType=TIMESTAMP},
      cont1 = #{cont1,jdbcType=VARCHAR},
      cTel1 = #{ctel1,jdbcType=VARCHAR},
      cont2 = #{cont2,jdbcType=VARCHAR},
      cTel2 = #{ctel2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>