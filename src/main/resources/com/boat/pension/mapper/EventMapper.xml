<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boat.pension.mapper.EventMapper">
  <resultMap id="BaseResultMap" type="com.boat.pension.model.Event">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="seniorID" jdbcType="INTEGER" property="seniorid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="deviceID" jdbcType="INTEGER" property="deviceid" />
    <result column="instID" jdbcType="INTEGER" property="instid" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="startTime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="enterTime" jdbcType="TIMESTAMP" property="entertime" />
    <result column="endTime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="handler" jdbcType="VARCHAR" property="handler" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="resultText" jdbcType="VARCHAR" property="resulttext" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, seniorID, name, deviceID, instID, type, startTime, state, enterTime, endTime, 
    handler, location, resultText
  </sql>
  <select id="selectByExample" parameterType="com.boat.pension.model.EventExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from event
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from event
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.boat.pension.model.EventExample">
    delete from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.boat.pension.model.Event">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into event (seniorID, name, deviceID, 
      instID, type, startTime, 
      state, enterTime, endTime, 
      handler, location, resultText
      )
    values (#{seniorid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{deviceid,jdbcType=INTEGER}, 
      #{instid,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{starttime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{entertime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, 
      #{handler,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, #{resulttext,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.boat.pension.model.Event">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seniorid != null">
        seniorID,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="deviceid != null">
        deviceID,
      </if>
      <if test="instid != null">
        instID,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="starttime != null">
        startTime,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="entertime != null">
        enterTime,
      </if>
      <if test="endtime != null">
        endTime,
      </if>
      <if test="handler != null">
        handler,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="resulttext != null">
        resultText,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seniorid != null">
        #{seniorid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="deviceid != null">
        #{deviceid,jdbcType=INTEGER},
      </if>
      <if test="instid != null">
        #{instid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="entertime != null">
        #{entertime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="handler != null">
        #{handler,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="resulttext != null">
        #{resulttext,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.boat.pension.model.EventExample" resultType="java.lang.Long">
    select count(*) from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update event
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.seniorid != null">
        seniorID = #{record.seniorid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceid != null">
        deviceID = #{record.deviceid,jdbcType=INTEGER},
      </if>
      <if test="record.instid != null">
        instID = #{record.instid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null">
        startTime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.entertime != null">
        enterTime = #{record.entertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.handler != null">
        handler = #{record.handler,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.resulttext != null">
        resultText = #{record.resulttext,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update event
    set id = #{record.id,jdbcType=INTEGER},
      seniorID = #{record.seniorid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      deviceID = #{record.deviceid,jdbcType=INTEGER},
      instID = #{record.instid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      startTime = #{record.starttime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      enterTime = #{record.entertime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP},
      handler = #{record.handler,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      resultText = #{record.resulttext,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.boat.pension.model.Event">
    update event
    <set>
      <if test="seniorid != null">
        seniorID = #{seniorid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="deviceid != null">
        deviceID = #{deviceid,jdbcType=INTEGER},
      </if>
      <if test="instid != null">
        instID = #{instid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        startTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="entertime != null">
        enterTime = #{entertime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        endTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="handler != null">
        handler = #{handler,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="resulttext != null">
        resultText = #{resulttext,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boat.pension.model.Event">
    update event
    set seniorID = #{seniorid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      deviceID = #{deviceid,jdbcType=INTEGER},
      instID = #{instid,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      enterTime = #{entertime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      handler = #{handler,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      resultText = #{resulttext,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>